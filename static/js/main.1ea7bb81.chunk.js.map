{"version":3,"sources":["components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","useState","text","setText","alignText","setAlignText","justifyText","setJustifyText","textSize","setTextSize","font","setFont","fonWeight","setFonWeight","punctuate","setPunctuate","className","style","textAlign","justifyContent","fontFamily","fontSize","fontWeight","value","onChange","event","target","id","rows","for","class","e","selectedFont","placeholder","selectedWeight","onClick","title","type","name","disabled","length","count","i","includes","spliting","split","charAt","toUpperCase","slice","join","newText","filter","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea7bb81.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst TextForm = () => {\n    const [text, setText] = useState(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \")\n\n    const [alignText, setAlignText] = useState(\"left\")\n    const [justifyText, setJustifyText] = useState(\"\")\n    const [textSize, setTextSize] = useState(20)\n    const [textSizePer, settextSizePer] = useState()\n    const [font, setFont] = useState(\"Open Sans\")\n    const [fonWeight, setFonWeight] = useState(\"bold\")\n\n    const handleChange= (event) =>{\n        setText(event.target.value)\n    }\n    \n    const handleTextSize = (event) =>{\n        setTextSize(event.target.value)\n    }\n\n    const handleTextRight = () =>{\n        setAlignText(\"end\")\n    }\n    const handleTextLeft = () =>{\n        setAlignText(\"left\")\n    }\n    const handleTextCenter = () =>{\n        setAlignText(\"center\")\n    }\n    const handleTextJustify = () =>{\n        setJustifyText(\"center\")\n    }\n\n    const handleTextSizePer = (event) =>{\n        settextSizePer(event.target.value)\n    }\n\n    const handleFUpClick= () =>{\n        let spliting = text.split(\" \");\n        for(let i=0; i<spliting.length; i++){\n        spliting[i] = spliting[i].charAt(0).toUpperCase() + spliting[i].slice(1);\n        //console.log(spliting[i])\n        }\n        setText(spliting.join(\" \"));\n    }\n\n    const [punctuate, setPunctuate] = useState(0)\n    const handlePuncCount = () => {\n        const punct = \"!,\\;\\.-?\";\n        let count = 0;\n        for(let i = 0; i < text.length; i++){\n           if(punct.includes(text[i])){\n             count++;     \n           };\n        };\n        setPunctuate(count)\n     };\n\n     const handleExtraSpace =()=>{\n        let newText = text.split(/[ ]+/); //yeh regex extra space ko htaata hai\n        //console.log(newText)\n        setText(newText.join(\" \"))\n    }\n    \n\n    return (\n        <div className=\"row\">\n            <div className=\"mb-3 col-md-7\">\n                <textarea className=\"form-control text-left\" \n                style={{\n                    textAlign:alignText, \n                    justifyContent:justifyText, \n                    fontFamily:font,\n                    \n                    fontSize:`${textSize}px`,\n                    // fontSize:`${textSizePer}%`,\n                    fontWeight:fonWeight}} value={text} onChange={handleChange} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n\n            <div className=\"col-md-4\">\n                <div className=\"row\">\n                    <div className=\"col-12 mb-2\">\n                    <label for=\"size\" class=\"form-label\">Font Style:</label>\n                        <select className=\"input-group custom-select mb-2\" onChange={(e)=>{\n                            const selectedFont = e.target.value;\n                            setFont(selectedFont)\n                        }} placeholder=\"Select Font\">\n                            <option value=\"Open Sans\" >Open Sans</option>\n                            <option value=\"Poppins\" >Poppins</option>\n                            <option value=\"Zen Antique\" >Zen Antique</option>\n                            <option value=\"Zen Antique\" >Noto Sans</option>\n                            <option value=\"Oswald\" >Oswald</option>\n                        </select>\n                        \n                    </div>\n                    <div className=\"d-flex mb-3\">\n                        <div className=\"col\">\n                        <label for=\"size\" class=\"form-label\">Font Weight:</label>\n                        <select className=\" input-group custom-select mb-2\" onChange={(e)=>{\n                            const selectedWeight = e.target.value;\n                            setFonWeight(selectedWeight)\n                        }} placeholder=\"Font Weight\">\n                            <option value=\"bold\" >Bold</option>\n                            <option value=\"normal\" >Normal</option>  \n                        </select>\n                        \n                        </div>\n                          \n                    </div>\n\n                    <div className=\" d-flex mb-3\">\n\n                        <div className=\"col\">\n                            {/* Text Size */}\n                            <label for=\"size\" class=\"form-label\">Font Size: </label>\n                            <a  onClick={() => setTextSize(textSize-1)} className=\"btn btn-primary\" title=\"Decrement\">-</a>\n                            <input type=\"text\" className=\"text-center\" name=\"size\" value={textSize} onChange={handleTextSize} placeholder=\"Change Text Size In px\"/>\n                            <a  onClick={() => setTextSize(textSize+1)} title=\"Increment\" className=\"btn btn-primary\">+</a>\n                        </div>  \n                        {/* <div className=\"col-md-6\">\n                        <label for=\"size\" class=\"form-label\">Per: \n                        <a  onClick={() => setTextSize(textSize-1)} className=\"btn btn-primary\" title=\"Decrement\">-</a> \n                            \n                        <input type=\"text\"  name=\"size\" value={textSizePer} onChange={handleTextSizePer} placeholder=\"Change Text Size In %\"/>\n                        <a  onClick={() => setTextSize(textSize+1)} title=\"Increment\" className=\"btn btn-primary\">+</a>\n                        </label>\n                        </div> */}\n                    </div>\n\n                </div>\n            \n\n                \n                <div className=\"d-flex mb-3\">\n                        <div className=\"col-md-3\">\n                        <button className=\"btn btn-sm btn-info px-4\" onClick={handleTextLeft} >\n                        <i class=\"fas fa-align-left\"></i>\n                        </button>\n                        </div>\n                        <div className=\"col-md-3\">\n                        <button className=\"btn btn-sm btn-warning px-4\" onClick={handleTextCenter}>\n                        <i class=\"fas fa-align-center\"></i>\n                        </button>\n                        </div>\n                        <div className=\"col-md-3\">\n                        <button className=\"btn btn-sm btn-secondary px-4\" onClick={handleTextRight}>\n                        <i class=\"fas fa-align-right\"></i>\n                        </button>\n                        </div>\n                        <div className=\"col-md-3\">\n                        <button className=\"btn btn-sm btn-info px-4\" onClick={handleTextJustify}>\n                        <i class=\"fas fa-align-justify\"></i>\n                        </button>\n                        </div>\n                </div>\n\n                <div className=\"d-flex\">\n                        <div className=\"col-md-4\">\n                        <button disabled={text.length=== 0} className=\"btn btn-sm btn-primary mx-1 my-1\" onClick={handlePuncCount}>Punctuation: {punctuate}</button>\n                        </div>\n                        <div className=\"col-md-4\">\n                        <button className=\"btn btn-sm btn-primary my-1\" onClick={handleFUpClick}>First Letter Uppercase</button>\n                        </div>\n                        <div className=\"col-md-4\"> \n                        <button className=\"btn btn-sm btn-primary mx-1 my-1\" onClick={handleExtraSpace}>Remove Extra Space</button>\n                        </div>\n                </div>\n                \n            </div>\n            <p> \n            Paragraph: {text.split(\" \").filter((element)=> {return element.length !==0}).length ===0?0:text.split(\"\\n\").length}\n            </p>\n            <p>Words: {text.split(/\\s+/).filter((element)=> {return element.length !==0}).length}</p>\n            <p>Space: {text.split(\" \").length -1}\n            </p> \n        </div>\n    )\n}\n\nexport default TextForm\n","import React,{ useState} from 'react';\nimport './App.css';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n \n  return (\n    <>\n     <div className=\"container my-3\">\n      <TextForm/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}